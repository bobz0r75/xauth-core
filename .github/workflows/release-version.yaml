---
name: Release latest commit with auto-incremented tag
on:
  workflow_dispatch:
  push:
    paths:
      - 'src/main/**'
      - 'pom.xml'
      - '.github/workflows/**'
    branches:
      - "main"
jobs:
  release-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: 'true'
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          overwrite-settings: false
      - name: Install dependencies
        run: sudo apt update && sudo apt install bc -y
      - name: Setup git
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
      - name: Set NEW_TAG into environment
        run: |
          latest=$(git tag -l --sort=version:refname \
            | grep -E '^v?[0-9]+\.[0-9]+(\.[0-9]+)?$' \
            | tail -n 1 \
            | sed 's/^v//')
          echo "Latest tag: $latest"
          [ -n "$latest" ] || latest="0.0.0"
          latestMajor=$(echo -n "$latest" | cut -d '.' -f 1)
          latestMinor=$(echo -n "$latest" | cut -d '.' -f 2)
          latestPatch=$(echo -n "$latest" | cut -d '.' -f 3)
          if [ -z "${latestPatch}" ]; then
            newPatch=0
          else
            newPatch=$(echo "$latestPatch + 1" | bc)
          fi
          echo NEW_TAG="$latestMajor.$latestMinor.$newPatch" >> "$GITHUB_ENV"
      - name: "Create tag"
        run: git tag ${{ env.NEW_TAG }}
      - name: "Push tag"
        run: git push origin ${{ env.NEW_TAG }}
      - name: "Set artifact version"
        run: |
          mvn --batch-mode \
            org.codehaus.mojo:versions-maven-plugin:2.16.2:set \
            -DnewVersion=${{ env.NEW_TAG }}
      - name: "Create Release"
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          generate_release_notes: true
          draft: false
          prerelease: false
      - name: "Run maven build"
        run: mvn --batch-mode clean deploy
...
